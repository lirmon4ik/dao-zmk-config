#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

#define U_TAPPING_TERM 300
#define U_QUICK_TAP 0

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 800  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20   // 10

#define ZMK_MOUSE_FAST_MOVE_VAL 1600
#define ZMK_MOUSE_FAST_SCRL_VAL 40
#define ZMK_MOUSE_SLOW_MOVE_VAL 400
#define ZMK_MOUSE_SLOW_SCRL_VAL 10

#define MV_FUP MOVE_Y(-ZMK_MOUSE_FAST_MOVE_VAL)
#define MV_FDOWN MOVE_Y(ZMK_MOUSE_FAST_MOVE_VAL)
#define MV_FLEFT MOVE_X(-ZMK_MOUSE_FAST_MOVE_VAL)
#define MV_FRIGHT MOVE_X(ZMK_MOUSE_FAST_MOVE_VAL)

#define SC_FUP MOVE_Y(ZMK_MOUSE_FAST_SCRL_VAL)
#define SC_FDOWN MOVE_Y(-ZMK_MOUSE_FAST_SCRL_VAL)
#define SC_FLEFT MOVE_X(-ZMK_MOUSE_FAST_SCRL_VAL)
#define SC_FRIGHT MOVE_X(ZMK_MOUSE_FAST_SCRL_VAL)

#define MV_SUP MOVE_Y(-ZMK_MOUSE_SLOW_MOVE_VAL)
#define MV_SDOWN MOVE_Y(ZMK_MOUSE_SLOW_MOVE_VAL)
#define MV_SLEFT MOVE_X(-ZMK_MOUSE_SLOW_MOVE_VAL)
#define MV_SRIGHT MOVE_X(ZMK_MOUSE_SLOW_MOVE_VAL)

#define SC_SUP MOVE_Y(ZMK_MOUSE_SLOW_SCRL_VAL)
#define SC_SDOWN MOVE_Y(-ZMK_MOUSE_SLOW_SCRL_VAL)
#define SC_SLEFT MOVE_X(-ZMK_MOUSE_SLOW_SCRL_VAL)
#define SC_SRIGHT MOVE_X(ZMK_MOUSE_SLOW_SCRL_VAL)

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

&mmv {
    acceleration-exponent = <1>;  // 1
    time-to-max-speed-ms = <300>; // 300
    delay-ms = <0>;
    trigger-period-ms = <8>;      // 16
};
&msc {
    acceleration-exponent = <1>;  // 0
    time-to-max-speed-ms = <40>;  // 300
    delay-ms = <0>;
    trigger-period-ms = <8>;      // 16
};

 behaviors {
            // Global
            mlt: mouse_layer_tap {
                compatible = "zmk,behavior-hold-tap";
                flavor = "hold-preferred";
                tapping-term-ms = <U_TAPPING_TERM>;
                quick-tap-ms = <U_QUICK_TAP>;
                #binding-cells = <2>;
                bindings = <&mo>, <&kp>;
            };
        };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC       &kp Q  &kp W  &kp E           &kp R                 &kp T      &kp Y        &kp U                     &kp I                 &kp O    &kp P     &kp LBKT
&kp LCTRL     &kp A  &kp S  &kp D           &kp F                 &kp G      &kp H        &kp J                     &kp K                 &kp L    &kp SEMI  &kp SQT
&kp LEFT_ALT  &kp Z  &kp X  &kp C           &kp V                 &kp B      &kp N        &kp M                     &kp COMMA             &kp DOT  &kp FSLH  &mt LEFT_ALT GRAVE
                            &lt 2 LEFT_WIN  &mt LEFT_SHIFT SPACE  &lt 1 TAB  &lt 1 ENTER  &mt LEFT_SHIFT BACKSPACE  &lt 2 LA(LEFT_SHIFT)
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp N1    &kp N2    &kp N3     &kp N4          &kp N5           &kp N6            &kp N7             &kp N8          &kp N9     &kp N0         &kp GRAVE
&trans  &kp EXCL  &kp AT    &kp HASH   &kp DLLR        &kp PRCNT        &kp CARET         &kp AMPS           &kp STAR        &kp LPAR   &kp RPAR       &kp COLON
&trans  &trans    &kp PLUS  &kp MINUS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDERSCORE  &kp EQUAL  &kp BACKSLASH  &trans
                            &trans     &trans          &trans           &trans            &trans             &trans
            >;
        };

        raise_layer {
            bindings = <
&kp C_PLAY_PAUSE  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp KP_NUM      &kp HOME        &kp PRINTSCREEN  &kp PG_UP        &kp CAPS         &kp C_VOL_UP
&kp C_NEXT        &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT_ARROW  &kp K_APP        &kp C_MUTE
&kp C_PREVIOUS    &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &kp LA(F4)      &kp END         &kp INS          &kp PG_DN        &kp PAUSE_BREAK  &kp C_VOL_DN
                                              &trans     &trans     &mo 3         &mo 3           &trans          &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader     &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_DISC 4  &bt BT_DISC 3  &bt BT_DISC 2  &bt BT_DISC 1  &bt BT_DISC 0  &bootloader
&bt BT_CLR_ALL  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_SEL 4   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0   &bt BT_CLR_ALL
&sys_reset      &none          &none          &none          &none          &bt BT_CLR     &bt BT_CLR     &none          &none          &none          &none          &sys_reset
                                              &trans         &none          &trans         &trans         &none          &trans
            >;
        };
    };
};
