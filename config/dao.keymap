#include "colemator/mouse.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define LWR 1
#define MOS 2
#define ADJ 3
#define FMO 4
#define SMO 5
#define U_TAPPING_TERM 200
#define U_QUICK_TAP 200
#define U_STREAK_DECAY 150
#define LEFT_HAND_KEYS   \
     0  1  2  3  4  5    \
    12 13 14 15 16 17    \
    24 25 26 27 28 29
#define RIGHT_HAND_KEYS  \
                          6  7  8  9 10 11 \
                         18 19 20 21 22 23 \
                         30 31 32 33 34 35
#define LEFT_THUMB_KEYS  \
             36 37 38
#define RIGHT_THUMB_KEYS \
                         39 40 41

&lt {
    flavor = "balanced";
    tapping-term-ms = <U_TAPPING_TERM>;
    quick-tap-ms = <U_QUICK_TAP>;
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <U_TAPPING_TERM>;
    quick-tap-ms = <U_QUICK_TAP>;
};

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    behaviors {
        // Global

        lsht: left_shift_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            hold-trigger-key-positions = <RIGHT_HAND_KEYS RIGHT_THUMB_KEYS>;
            hold-trigger-on-release; // for combining HRMs
            tapping-term-ms = <U_TAPPING_TERM>;
            quick-tap-ms = <U_QUICK_TAP>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        lmt: left_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            hold-trigger-key-positions = <RIGHT_HAND_KEYS RIGHT_THUMB_KEYS>;
            hold-trigger-on-release; // for combining HRMs
            tapping-term-ms = <U_TAPPING_TERM>;
            quick-tap-ms = <U_QUICK_TAP>;
            require-prior-idle-ms = <U_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        rsht: right_shift_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            hold-trigger-key-positions = <LEFT_HAND_KEYS LEFT_THUMB_KEYS>;
            hold-trigger-on-release; // for combining HRMs
            tapping-term-ms = <U_TAPPING_TERM>;
            quick-tap-ms = <U_QUICK_TAP>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        rmt: right_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            hold-trigger-key-positions = <LEFT_HAND_KEYS LEFT_THUMB_KEYS>;
            hold-trigger-on-release; // for combining HRMs
            tapping-term-ms = <U_TAPPING_TERM>;
            quick-tap-ms = <U_QUICK_TAP>;
            require-prior-idle-ms = <U_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        mlt: mouse_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = "hold-preferred";
            tapping-term-ms = <U_TAPPING_TERM>;
            quick-tap-ms = <U_QUICK_TAP>;
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC       &kp Q  &kp W            &kp E         &kp R               &kp T  &kp Y        &kp U                &kp I                 &kp O             &kp P     &kp LBKT
&kp TAB       &kp A  &lmt LEFT_ALT S  &lmt LCTRL D  &lsht LEFT_SHIFT F  &kp G  &kp H        &rsht RIGHT_SHIFT J  &rmt RCTRL K          &rmt RIGHT_ALT L  &kp SEMI  &kp SQT
&kp LEFT_WIN  &kp Z  &kp X            &kp C         &kp V               &kp B  &kp N        &kp M                &kp COMMA             &kp DOT           &kp FSLH  &mt LEFT_ALT GRAVE
                                      &mo 2         &kp SPACE           &mo 1  &lt 1 ENTER  &kp BACKSPACE        &lt 2 LA(LEFT_SHIFT)
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp N1    &kp N2    &kp N3     &kp N4          &kp N5           &kp N6            &kp N7             &kp N8          &kp N9     &kp N0         &kp GRAVE
&trans  &kp EXCL  &kp AT    &kp HASH   &kp DLLR        &kp PRCNT        &kp CARET         &kp AMPS           &kp STAR        &kp LPAR   &kp RPAR       &kp COLON
&trans  &trans    &kp PLUS  &kp MINUS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDERSCORE  &kp EQUAL  &kp BACKSLASH  &trans
                            &trans     &trans          &trans           &trans            &trans             &trans
            >;
        };

        mouse_layer {
            bindings = <
&kp C_PLAY_PAUSE  &mkp RCLK       &msc SCRL_UP     &mmv MOVE_UP    &msc SCRL_DOWN   &trans     &kp PRINTSCREEN  &kp CAPS        &kp PAUSE_BREAK  &kp K_APP        &trans  &kp C_VOL_UP
&kp C_NEXT        &mkp LCLK       &mmv MOVE_LEFT   &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans     &kp LEFT_ARROW   &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT_ARROW  &trans  &kp C_MUTE
&kp C_PREVIOUS    &msc SCRL_LEFT  &msc SCRL_RIGHT  &mkp MB4        &mkp MB5         &mkp MCLK  &kp LA(F4)       &mo 3           &mo 4            &trans           &trans  &kp C_VOL_DN
                                                   &trans          &trans           &mo 5      &mo 5            &trans          &trans
            >;
        };

        fast_mouse_layer {
            bindings = <
&trans  &trans         &msc SC_FUP     &mmv MV_FUP    &msc SC_FDOWN   &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans         &mmv MV_FLEFT   &mmv MV_FDOWN  &mmv MV_FRIGHT  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &msc SC_FLEFT  &msc SC_FRIGHT  &trans         &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                       &trans         &trans          &trans  &trans  &trans  &trans
            >;
        };

        slow_mouse_layer {
            bindings = <
&trans  &trans         &msc SC_SUP     &mmv MV_SUP    &msc SC_SDOWN   &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans         &mmv MV_SLEFT   &mmv MV_SDOWN  &mmv MV_SRIGHT  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &msc SC_SLEFT  &msc SC_SRIGHT  &trans         &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                       &trans         &trans          &trans  &trans  &trans  &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader     &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_DISC 4  &bt BT_DISC 3  &bt BT_DISC 2  &bt BT_DISC 1  &bt BT_DISC 0  &bootloader
&bt BT_CLR_ALL  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_SEL 4   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0   &bt BT_CLR_ALL
&sys_reset      &none          &none          &none          &none          &bt BT_CLR     &bt BT_CLR     &none          &none          &none          &none          &sys_reset
                                              &trans         &none          &trans         &trans         &none          &trans
            >;
        };
    };
};
