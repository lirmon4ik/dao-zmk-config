#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
          &kp ESC           &kp Q   &kp W   &kp E         &kp R             &kp T         &kp Y         &kp U            &kp I         &kp O     &kp P      &kp LBKT       
          &mt LCTRL TAB     &kp A   &kp S   &kp D         &kp F             &kp G         &kp H         &kp J            &kp K         &kp L     &kp SEMI   &kp SQT
          &kp LSHFT         &kp Z   &kp X   &kp C         &kp V             &kp B         &kp N         &kp M            &kp COMMA     &kp DOT   &kp FSLH   &mt RALT GRAVE
                                            &kp LGUI      &mo LWR           &lt RSE SPACE &kp RET       &kp BSPC         &kp CAPSLOCK
                        >;
                };

                lower_layer {
                        bindings = <
           &kp ESC    &kp N1       &kp N2            &kp N3             &kp N4               &kp N5            &kp N6                   &kp N7                     &kp N8                 &kp N9                   &kp N0     &kp GRAVE
           &trans     &kp EXCL     &kp AT            &kp HASH           &kp DLLR             &kp PRCNT         &kp CARET                &kp AMPS                   &kp KP_MULTIPLY        &kp LPAR                 &kp RPAR   &kp COLON
           &kp LSHFT  &trans       &kp PLUS          &kp MINUS          &kp LEFT_BRACE       &kp LEFT_BRACKET  &kp RIGHT_BRACKET        &kp RIGHT_BRACE            &kp EQUAL              &kp UNDERSCORE           &trans     &trans
                                                     &kp LGUI           &trans               &mo ADJ        &trans                   &trans                     &trans
                                >;
                        };

                raise_layer {
                        bindings = <
          &mt LGUI KP_NUM   &kp KP_SLASH      &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_MINUS   &kp C_VOL_UP   &kp HOME   &kp PSCRN   &kp PG_UP   &kp SLCK          &kp CLCK   
          &mt LCTRL EQUAL   &kp KP_MULTIPLY   &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp KP_PLUS    &kp C_MUTE     &kp LEFT   &kp UP      &kp RIGHT   &kp INS           &mt RCTRL  K_APP
          &kp LALT          &kp KP_N0         &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp KP_DOT     &kp C_VOL_DN   &kp END    &kp DOWN    &kp PG_DN   &kp PAUSE_BREAK   &kp RALT
                                                          &kp LGUI    &mo ADJ     &trans         &trans         &trans     &trans
                        >;
                };
                adjust_layer {
                        bindings = <
 &bootloader   &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &bootloader
 &bt BT_CLR    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_SEL 4   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0   &bt BT_CLR
 &sys_reset        &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &sys_reset
                                             &trans         &none          &trans         &trans         &none          &trans
                        >;
                };
        };
};